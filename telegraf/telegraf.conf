############################################################################################
############################################################################################
##
##                              TELEGRAF CONFIGURATION
##
##  Topic format
##    The standard format for MQTT topics is as follows:
##    
##      organization / student id / asset / aspect / sensor / variable
##
##    where:
##      - organization (org):   name of the InfluxDB organization
##      - student id:           name to identify the students
##      - asset:                machinery type where the data is collected from
##      - aspect:               the parameter being monitored
##      - sensor:               name of the sensor to separate same aspects (e.g. vibration)
##      - variable:             the name of the data that is collected
##
##    An example that follows the above scheme:
##
##      bmetk / johndoe / lathe / temperature / mlx90614 / tempC
##
##    NOTE: Use descriptive topic names as they will be used as tag keys.
##
##    Here is a list of the aspects we are currently monitoring (choose from these)
##      - current
##      - rpm
##      - temperature
##      - vibration
##      
##    
##   Topic parsing:
##     The parsing process extracts different fields from the MQTT topic and assigns them to
##     different elements of the metric. The element-topic mapping is the following:
##
##      - measurement:          asset
##      - tags:                 org, student id, aspect, sensor
##      - fields:               variable
##
############################################################################################
############################################################################################






[global_tags]



##############################################
##              AGENT CONFIG                ##
##############################################

[agent]
  interval = "1s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "5s"
  flush_jitter = "0s"
  precision = ""



##############################################
##              INPUT PLUGINS               ##
##############################################

# input plugin for float payloads
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = ["bmetk/+/+/current/#", 
            "bmetk/+/+/speed/#", 
            "bmetk/+/+/temperature/#"]
  qos = 0
  connection_timeout = "20s"
  data_format = "value"
  data_type = "float"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "bmetk/+/+/+/+/+"
    measurement = "_/_/measurement/_/_/_"
    tags = "org/student/_/aspect/sensor/_"
    #fields = "_/_/_/_/_/variable"

# input for json payloads (exported as strings)
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = ["bmetk/+/+/vibration/#"]
  qos = 0
  connection_timeout = "20s"
  data_format = "value"
  data_type = "string"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "bmetk/+/+/+/+/+"
    measurement = "_/_/_/_/_/measurement"
    tags = "org/student/_/aspect/sensor/_"




##############################################
##             OUTPUT PLUGINS               ##
##############################################

# configure this output for laboratory subjects
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "$INFLUX_TOKEN_LAB"
  organization = "$DOCKER_INFLUXDB_INIT_ORG"
  bucket = "laboratory"

  [outputs.influxdb_v2.tagdrop]
    student = ["mark"]



# thesis project - DON'T MODIFY
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "$INFLUX_TOKEN_THESIS"
  organization = "$DOCKER_INFLUXDB_INIT_ORG"
  bucket = "opendaq"
  
  [outputs.influxdb_v2.tagpass]
    student = ["mark"]